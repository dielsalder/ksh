import numpy as np
import ksh
import dna_from_pdb as dna

def segment(dna, num=1, max=22):
    pair_crds = []
    while num < max:
#        pair_crds.append(next(dna.pair_crds()))
        pair_crds = pair_crds + next(dna.pair_crds())
        num += 1
        yield (pair_crds, num)
# Output list is three-dimensional but should be two dimensional. Write nd-flatten.
def segment(dna, num):
    segment = [pair for i, pair in enumerate(dna.pair_crds()) if i < num]
    return (segment, num)

bdna = dna.DnaMolecule('e55dna.pdb')
segment(bdna, 10)
#ksh.best_rotation(ksh.crdset(bdna.all_crds)).print_results()

print "\nnbp\tResidual\tRadius\t\tCenter"
for helix in segment(bdna, 10):
    crds, num = helix
    crdset = ksh.crdset(crds)
#    best = ksh.best_rotation(crdset)
#    print num, "\t", best.res_v, "\t", best.radius, "\t", best.center
    print num, "\t", crdset.res_v, "\t", crdset.radius, "\t", crdset.center
